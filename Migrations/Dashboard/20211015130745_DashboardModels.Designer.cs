// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using device_wall_backend.Modules.Dashboard.Gateway;

namespace device_wall_backend.Migrations.Dashboard
{
    [DbContext(typeof(DashboardContext))]
    [Migration("20211015130745_DashboardModels")]
    partial class DashboardModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("device_wall_backend.Models.Device", b =>
                {
                    b.Property<int>("DeviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("DeviceID");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("device_wall_backend.Models.Device", b =>
                {
                    b.OwnsOne("device_wall_backend.Models.Features", "Features", b1 =>
                        {
                            b1.Property<int>("DeviceID")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<int>("Dpi")
                                .HasColumnType("integer");

                            b1.Property<bool>("HasSIM")
                                .HasColumnType("boolean");

                            b1.Property<int>("HorizontalSize")
                                .HasColumnType("integer");

                            b1.Property<bool>("IsTablet")
                                .HasColumnType("boolean");

                            b1.Property<string>("Manufacturer")
                                .HasColumnType("text");

                            b1.Property<string>("OperatingSystem")
                                .HasColumnType("text");

                            b1.Property<string>("Port")
                                .HasColumnType("text");

                            b1.Property<string>("Version")
                                .HasColumnType("text");

                            b1.Property<int>("VerticalSize")
                                .HasColumnType("integer");

                            b1.Property<List<string>>("exceptionalCases")
                                .HasColumnType("text[]");

                            b1.HasKey("DeviceID");

                            b1.ToTable("Device");

                            b1.WithOwner()
                                .HasForeignKey("DeviceID");
                        });

                    b.Navigation("Features");
                });
#pragma warning restore 612, 618
        }
    }
}
